<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

        <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
        <!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->
        <mvc:resources location="/error/" mapping="/error/**" />
        <mvc:resources location="/assets/" mapping="/assets/**" />
        <mvc:resources location="/*.html" mapping="/**.html" />
        <!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。即解决了@Controller注解的使用前提配置。 -->
        <!-- 启用默认配置 -->
        <!--json配置-->
        <mvc:annotation-driven>
                <mvc:message-converters register-defaults="true">
                        <!-- 配置Fastjson支持 -->
                        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                                <property name="supportedMediaTypes">
                                        <list>
                                                <value>text/html;charset=UTF-8</value>
                                                <value>application/json</value>
                                        </list>
                                </property>
                                <property name="features">
                                        <list>
                                                <value>WriteMapNullValue</value>
                                                <value>QuoteFieldNames</value>
                                        </list>
                                </property>
                        </bean>
                </mvc:message-converters>
        </mvc:annotation-driven>

        <!-- mvc:view-controller可以在不需要Controller处理request的情况，转向到设置的View -->
        <!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->
        <mvc:view-controller path="/" view-name="login" />

        <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <!--<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
                <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
                <!--<property name="viewNames" value="*.jsp" />-->
                <!--<property name="prefix" value="/WEB-INF" />-->
                <!--<property name="suffix" value="" />-->
                <!--<property name="order" value="2"/>-->
        <!--</bean>-->
        <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                <property name="prefix" value="/WEB-INF" />
                <property name="suffix" value="" />
                <property name="order" value="1"/>
        </bean>
       <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="prefix" value="/WEB-INF/pages/" />
                <property name="suffix" value=".jsp" />
        </bean>-->


</beans>